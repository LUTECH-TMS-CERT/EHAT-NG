%link{:href => "/css/bootstrap-suggest.css", :rel => "stylesheet"}/
%script{:src => "/js/bootstrap-suggest.js"}
%script{:src => "/js/cvss.js"}

.span10
  %br
  %h2 New Finding
  %br
  %br
  %form{ :class => "form-horizontal", :method => 'post', :enctype => 'application/x-www-form-urlencoded'}
    .control-group
      %label{ :class => "control-label", :for => "title" } Title
      .controls
        %input{ :type => 'text', :name => 'title', :value => ""}
    .control-group
      %label{ :class => "control-label", :for => "input-tags" } Tags
      .controls
        %input{ :type => 'text', :id => 'input-tags' ,:name => 'tags', :required => false}
      %script{:type=>"text/javascript"}
        $('#input-tags').selectize({
        delimiter: ',',
        persist: false,
        create: function(input) {
        return {
        value: input,
        text: input
        }
        }
        });
    - if !@master
      .control-group
        %label{ :class => "control-label", :for => "assessment_type" } Assessment Type
        .controls
          %select{ :name => "assessment_type" }
            - options.assessment_types.each do |type|
              %option #{type}
    .control-group
      %label{ :class => "control-label", :for => "type" } Finding Type
      .controls
        %select{ :name => "type"}
          - options.finding_types.each do |type|
            %option #{type}
    - if @nessusmap
      .control-group
        %label{ :class => "control-label", :for => "pluginid" } Add new nessus ID mapping
        .controls
          %input{ :type => 'text', :name => 'pluginid'}
    - if @vulnmap
      .control-group
        %label{ :class => "control-label", :for => "msf_ref" } Add new Vuln ID mapping
        .controls
          %input{ :type => 'text', :name => 'msf_ref'}
    - elsif @cvss
      .control-group
        %label{ :class => "control-label", :for => "cvss_score" } CVSS Score
        .controls
          %input{ :type => 'text', :id => 'cvss_score' ,:name => 'cvss_score', :required => true}
      .control-group
        %label{ :class => "control-label", :for => "cvss_vector" } CVSS Vector
        .controls
          %input{ :type => 'text', :id => 'cvss_vector' ,:name => 'cvss_vector', :required => true}
      .control-group
        %label{ :class => "control-label", :for => "cvss_severity" } CVSS Severity
        .controls
          %input{ :type => 'text', :id => 'cvss_severity' ,:name => 'cvss_severity', :required => true}
      %div{:id => 'cvssboard'}
      :javascript
        var c = new CVSS("cvssboard", {
            onchange: function() {
                document.getElementById("cvss_vector").value = c.get().vector;
                document.getElementById("cvss_score").value = c.get().score;
                document.getElementById("cvss_severity").value = c.get().severity;
            }
        });
    - else
      .control-group
        %label{ :class => "control-label", :for => "effort" } Remediation Effort
        .controls
          %select{ :name => "effort" }
            - if @finding
              - options.effort.each do |effort|
                - if effort == @finding.effort
                  %option{ :selected => "selected" } #{effort}
                - else
                  %option #{effort}
            - else
              - options.effort.each do |effort|
                %option #{effort}

    .control-group
      %label{ :class => "control-label", :for => "parameter" } Parameter
      .controls
        %input{ :type => 'text', :name => 'parameter'}
    .control-group
      %label{ :class => "control-label", :for => "method" } Method
      .controls
        %select{ :name => "method" }
          %option{ :selected => "selected" }
          %option GET
          %option POST
    .control-group
      %label{ :class => "control-label", :for => "overview" }
        %a{:href=> '#mymodal', "data-toggle"=>'modal', :class=>'btn btn-info'}
          Overview
      .modal{:id=>'mymodal', :class=>'modal hide fade', :tabindex=>'-1', :role=>'dialog', "aria-labelledby"=>'modal-label', "aria-hidden"=>'true'}
        .modal-header
          %button{:type=>'button', :class=>'close btn btn-default', "data-dismiss"=>"modal", "aria-hidden"=>"true"}
            x
          %h3{:id=>"modal-label"}
            Meta Markup
        .modal-body
          %p
            There are four markup sets you can use in the Overview and the Remediation summary. This text is converted inside of Microsoft Word.
            %p{:class=>"text-error"}
              YOU MUST CLOSE ALL TAGS. OTHERWISE YOU CAN DESTROY ALL TEXT FORMATTING. SEE EXAMPLES BELOW.
            %b
              Review the finding "TEST - Markup Tester" for a clear example. As always, press preview to see the finding in Word.
          %h2
            Bullets
          %p
            Place the bulleted text inbetween a *- and a -* like so:
            %br
            %br
            %code
              *- Bulleted text goes here -*
          %h2
            Paragraph Heading Text
          %p
            Place the heading inbetween a [== and a ==] like so:
            %br
            %br
            %code
              [== Heading text goes here ==]
          %h2
            Italics
          %p
            Place italicized inbetween a [~~ and a ~~] like so:
            %br
            %br
            %code
              [~~ Italics ~~]
          %h2
            Code
          %p
            Place code inbetween a [[[ and a ]]] like below. CODE CANNOT STRETCH MULTIPLE LINES.
            %br
            %br
            %code
              [[[ code, code goes here ]]]

      .controls
        %textarea{ :rows => '10', :class => 'input-xxlarge', :id => 'overview', :name => 'overview'}
    .control-group
      %label{ :class => "control-label", :for => "pocu" } Proof of Concept
      .controls
        %textarea{ :rows => '10', :class => 'input-xxlarge', :id => 'poc', :name => 'poc', :id => 'pocu'}
    - attachments=''
    - if @attaches
      - @attaches.each do |attach|
        - attachments = attachments + "{name: '#{attach}'},"
    / autosuggest code is care of bootstrap-suggest.js    
    :javascript
      var files = [
        #{attachments}
      ];
        $('#pocu').suggest('[', {
          data: files,
          filter: {
              casesensitive: true,
              limit: 10
            },
          map: function(file) {
            return {
              value: '!!'+file.name+'!!]',
              text: '<strong>'+file.name+'</strong>'
            }
          }
        })
    - if !@master
      .control-group
        %label{ :class => "control-label", :for => "affected_hosts" } Affected Hosts
        .controls
          %textarea{ :rows => '10', :class => 'input-xxlarge', :id => 'affected_hosts', :name => 'affected_hosts'}
    .control-group
      %label{ :class => "control-label", :for => "remediation" } Remediation
      .controls
        %textarea{ :rows => '10', :class => 'input-xxlarge', :name => 'remediation'}
    .control-group
      %label{ :class => "control-label", :for => "references" } References (One Per Line)
      .controls
        %textarea{ :rows => '5', :class => 'input-xxlarge', :name => 'references'}
    - if !@master
      .control-group
        %label{ :class => "control-label", :for => "notes" } Notes
        .controls
          %textarea{ :rows => '10', :class => 'input-xxlarge', :id => 'notes', :name => 'notes'}

    - id_r = @report ? "/report/#{@report.id}/findings" : "/master/findings"
    %input{:type => 'submit', :value => 'Save', :class => "btn btn-default"}
    %a{ :href => "#{id_r}"}
      %input{ :type => "button", :value => 'Cancel', :class => "btn btn-default"}
